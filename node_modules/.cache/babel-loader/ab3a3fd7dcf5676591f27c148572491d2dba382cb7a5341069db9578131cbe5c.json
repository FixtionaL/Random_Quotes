{"ast":null,"code":"var _jsxFileName = \"/Users/harsh/randomq/src/Components/Quotes.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quote = () => {\n  _s();\n  const [quote, setQuote] = useState(\"\");\n  const textRef = useRef();\n  let colors = ['#34568B', '#6B5B95', '#88B04B', '#955251', '#009B77'];\n  const getQuote = () => {\n    fetch(\" https://type.fit/api/quotes\").then(res => res.json()).then(data => {\n      let ran = Math.floor(Math.random() * data.length);\n      setQuote(data[ran]);\n    });\n  };\n  useEffect(() => {\n    getQuote();\n  }, []);\n  useEffect(() => {\n    let clran = Math.floor(Math.random() * colors.length);\n    textRef.current.style.color = colors[clran];\n  }, [quote]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"heading\",\n      className: \"mainH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          ref: textRef,\n          children: quote.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: quote.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"qte-btn\",\n          onClick: getQuote,\n          children: \"Next Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Quote, \"QpwZTewHpBP45byrHc7Ze54E8jM=\");\n_c = Quote;\nexport default Quote;\nvar _c;\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"names":["React","Component","useEffect","useState","useRef","jsxDEV","_jsxDEV","Quote","_s","quote","setQuote","textRef","colors","getQuote","fetch","then","res","json","data","ran","Math","floor","random","length","clran","current","style","color","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","text","author","onClick","_c","$RefreshReg$"],"sources":["/Users/harsh/randomq/src/Components/Quotes.js"],"sourcesContent":["import React, { Component,useEffect,useState ,useRef} from 'react';\n\n\nconst Quote = () =>\n{\n\n    const[quote,setQuote]=useState(\"\");\n    const textRef = useRef();\n    let colors = ['#34568B','#6B5B95','#88B04B','#955251','#009B77'];\n    const getQuote = () =>\n    {\n        fetch(\" https://type.fit/api/quotes\")\n        .then((res)=>res.json())\n        .then((data)=>\n        {\n            let ran = Math.floor(Math.random() * data.length);\n            setQuote(data[ran]);\n        })\n    }\n\n    useEffect(() =>\n    {\n        getQuote();\n    },[])\n\n    useEffect(()=>\n        {\n            let clran = Math.floor(Math.random() *colors.length);\n            textRef.current.    style.color = colors[clran];\n        },[quote]);\n\n    return(\n        <div>\n            <h1 id='heading' className='mainH'></h1>\n\n        <div className='container'>\n            <div className='data'>\n                <p ref={textRef}>{quote.text}</p>\n                <b>{quote.author}</b>\n            </div>\n            <div className='btn'>\n            <button className='qte-btn' onClick={getQuote}>Next Quote</button>\n            {/* <a href={`https://twitter.com/intent/tweet?text=${quote.text}`} target=\"_blank\" rel=\"noopener noreferrer\" className='twt-btn'><button>Tweet</button></a> */}\n        </div>\n        </div>\n        </div>\n    )\n}\nexport default Quote;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAACC,SAAS,EAACC,QAAQ,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnE,MAAMC,KAAK,GAAGA,CAAA,KACd;EAAAC,EAAA;EAEI,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMQ,OAAO,GAAGP,MAAM,EAAE;EACxB,IAAIQ,MAAM,GAAG,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,CAAC;EAChE,MAAMC,QAAQ,GAAGA,CAAA,KACjB;IACIC,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEG,IAAI,IACX;MACI,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,IAAI,CAACK,MAAM,CAAC;MACjDb,QAAQ,CAACQ,IAAI,CAACC,GAAG,CAAC,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;EAEDjB,SAAS,CAAC,MACV;IACIW,QAAQ,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EAELX,SAAS,CAAC,MACN;IACI,IAAIsB,KAAK,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAEV,MAAM,CAACW,MAAM,CAAC;IACpDZ,OAAO,CAACc,OAAO,CAAKC,KAAK,CAACC,KAAK,GAAGf,MAAM,CAACY,KAAK,CAAC;EACnD,CAAC,EAAC,CAACf,KAAK,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAIuB,EAAE,EAAC,SAAS;MAACC,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAE5C5B,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAF,QAAA,gBACtBtB,OAAA;QAAKwB,SAAS,EAAC,MAAM;QAAAF,QAAA,gBACjBtB,OAAA;UAAG6B,GAAG,EAAExB,OAAQ;UAAAiB,QAAA,EAAEnB,KAAK,CAAC2B;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjC5B,OAAA;UAAAsB,QAAA,EAAInB,KAAK,CAAC4B;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnB,eACN5B,OAAA;QAAKwB,SAAS,EAAC,KAAK;QAAAF,QAAA,eACpBtB,OAAA;UAAQwB,SAAS,EAAC,SAAS;UAACQ,OAAO,EAAEzB,QAAS;UAAAe,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEhE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAAA1B,EAAA,CA5CKD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AA6CX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}